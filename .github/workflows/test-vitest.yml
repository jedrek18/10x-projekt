name: CI • Vitest

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm

      - name: Install deps
        run: npm ci

      # Uruchomienie testów — reporter 'github-actions' zapewnia adnotacje w CI,
      # a 'junit' zapisuje plik XML do dalszego raportowania
      - name: Run Vitest (JUnit + GH annotations + coverage)
        run: npx vitest run --coverage

      # Artefakt z JUnit (przydaje się do debugowania / archiwizacji)
      - name: Upload JUnit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: reports/junit.xml
          if-no-files-found: warn

      # Przyjazny raport jako Check + podsumowanie w jobie
      - name: Publish Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Vitest Results
          path: reports/junit.xml
          reporter: junit
          fail-on-error: false

      # Artefakty z pokryciem (HTML + lcov)
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
